import Head from "next/head";
import EmojiCard from "../components/EmojiCard";
import emojis from "emojibase-data/en/data.json";
import Grid from "../components/Grid";
import { useState } from "react";
import SelectedEmoji from "../components/SelectedEmoji";
import SettingsBar from "../components/SettingsBar";

export default function Home(props) {
    const [emojiSize, setEmojiSize] = useState(40);
    const [selectedEmoji, setSelectedEmoji] = useState();
    const [visibleEmojis, setVisibleEmojis] = useState(emojis);

    function changeEmojiSize(newSize) {
        setEmojiSize(newSize);
    }

    function closeSelectedEmojiCard() {
        setSelectedEmoji(null);
    }

    function filterByGroup(groupNumber) {
        setVisibleEmojis(emojis.filter((x) => x.group == groupNumber));
    }

    function filterByVersion(versionNumber) {
        setVisibleEmojis(emojis.filter((x) => x.version == versionNumber));
    }

    function removeFilter() {
        setVisibleEmojis(emojis);
    }

    return (
        <div>
            <Head>
                <title>Twemoji Cheatsheet</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                {/* <link rel="icon" href="/favicon.ico" /> */}
            </Head>

            <main>
                <h1>Twemoji Cheatsheet</h1>
                <SettingsBar
                    totalEmojis={emojis.length}
                    filterByGroup={filterByGroup}
                    removeFilter={removeFilter}
                    filterByVersion={filterByVersion}
                    sizeSlider={
                        <input
                            type="range"
                            min="16"
                            max="72"
                            // step="4"
                            value={emojiSize}
                            onChange={(e) => changeEmojiSize(e.target.value)}
                        />
                    }
                />

                <Grid>
                    {visibleEmojis.map((emoji) => {
                        return (
                            <EmojiCard
                                size={emojiSize}
                                key={emoji.emoji}
                                emoji={emoji}
                                onClick={() => setSelectedEmoji(emoji)}
                            />
                        );
                    })}
                </Grid>

                {selectedEmoji && (
                    <SelectedEmoji
                        emoji={selectedEmoji}
                        closeFunc={closeSelectedEmojiCard}
                    />
                )}
            </main>
        </div>
    );
}
